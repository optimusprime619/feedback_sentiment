<?php

/**
 * @file This module uses the Insight analyzer to process and render the sentiment analysis result
 */

/**
 * Implements hook_help().
 */
function analyzer_help($path, $arg) {
  switch ($path) {
    case 'admin/help#analyzer':
      return '<p>' . t("This module serves to get the input file and subject it to processing using the PHPInsight library.
      The analyzed score information is classified as either positive/negative/neutral and written to a file for further use") . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function analyzer_permission() {
  return array(
    'analyze user comments' => array(
      'title' => 'Analyze user comments',
      'description' => 'This permission enables user to upload and identify user comment sentiment',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function analyzer_menu() {
  $items = array();
  $items['admin/config/analyzer'] = array(
    'title' => 'User Comment Sentiment Analyzer',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('analyzer_file_upload_form'),
    'access arguments' => array('analyze user comments'),
    'file' => 'includes/analyzer.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_libraries_info()
 */
function analyzer_libraries_info() {
 $libraries['phpInsight'] = array(
  'name' => 'PHP Insight',
  'vendor url' => 'https://github.com/JWHennessey/phpInsight',
  'download url' => 'https://github.com/JWHennessey/phpInsight/archive/master.zip',
  'files' => array(
    'php' => array('autoload.php'),
  ),
  /*'xautoload' => function($adapter) {
    // $adapter->add('\PHPInsight', 'src');
    $adapter->namespaceRoot('\PHPInsight', 'lib');
  },*/
  );
 return $libraries;
}
 

function analyzer_get_sentiment($file_value = NULL) {
  //print "Checking file value \n"; var_dump($file_value);
  $path = libraries_get_path('phpInsight');
  require_once DRUPAL_ROOT . '/' . $path . '/autoload.php'; 
  // Test Data
  $strings = array(
    1 => 'Weather today is rubbish',
    2 => 'This cake looks amazing',
    3 => 'His skills are mediocre',
    4 => 'He is very talented',
    5 => 'She is seemingly very agressive',
    6 => 'Marie was enthusiastic about the upcoming trip. Her brother was also passionate about her leaving - he would finally have the house for himself.',
    7 => 'To be or not to be?',
  );

  try {
    $sentiment = new \PHPInsight\Sentiment();
    $result_data = array();
    if (isset($file_value)) {
      foreach ($file_value as $string) {
        // calculations:
        $scores = $sentiment->score($string);
        $class = $sentiment->categorise($string);
        $result_data[] = $class;
        //output:
        echo "String: $string\n";
        echo "Dominant: $class, scores: ";
        print_r($scores);
        echo "\n";
      }
    }
    else {
      drupal_set_message(t('No data read from file'), 'error');
    }
    unset($file_value);
    $sentiment_analysis_results = implode("\n", $result_data);
    $destination_dir = "public://" . variable_get('sentiment_destination_dir', "output");
    $dir_writable = file_prepare_directory($destination_dir, FILE_CREATE_DIRECTORY);
    if ($dir_writable === FALSE) {
      drupal_set_message(t('Could not create or write destination directory @file', array('@file' => $dir_writable)), 'error');
    }
    file_save_data($sentiment_analysis_results, $destination_dir . "/" . REQUEST_TIME . "_analysis_result.txt");
    drupal_set_message(t("Sentiment analysis data written to file successfully!"));
  }
  catch (Exception $e) {
    drupal_set_message($e->getMessage());
    watchdog_exception('analyzer', $e);
  }
}
